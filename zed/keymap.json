[
  {
    "bindings": {
      // i like index
      "cmd-shift-i": "project_symbols::Toggle"
      // "cmd-alt-t": "task::Spawn"
    }
  },
  {
    "context": "Workspace",
    "bindings": {
      // clashes with reopen closed tab..
      "cmd-?": "workspace::NewSearch",
      "alt-t": ["task::Rerun", { "reevaluate_context": true }]
    }
  },
  {
    "context": "Editor && vim_mode == normal && !VimWaiting && !menu",
    "bindings": {
      // put key-bindings here if you want them to work only in normal mode
      "g d": "editor::GoToDefinition",
      "ctrl-w g d": "editor::GoToDefinitionSplit",
      "g shift-d": "editor::GoToTypeDefinition",
      "ctrl-w g shift-d": "editor::GoToTypeDefinitionSplit",
      "g i": "editor::GoToImplementation",
      "ctrl-w g i": "editor::GoToImplementationSplit",
      "g r": "editor::FindAllReferences",
      "] d": "editor::GoToDiagnostic",
      "[ d": "editor::GoToPrevDiagnostic",
      "] c": "editor::GoToHunk",
      "[ c": "editor::GoToPrevHunk",
      // space is "leaderkey"
      "space h p": "editor::ToggleHunkDiff",
      "space c a": "editor::ToggleCodeActions",
      "space r n": "editor::Rename",
      "space d": "editor::OpenDocs"
    }
  },
  {
    "context": "VimControl && !menu",
    "bindings": {
      "ctrl-w v": "pane::SplitRight",
      "ctrl-w s": "pane::SplitDown",
      "ctrl-w z": "workspace::ToggleCenteredLayout",
      "ctrl-w n": "workspace::ActivateNextWindow",
      "ctrl-w p": "workspace::ActivatePreviousWindow"
    }
  },
  {
    "context": "Editor && vim_mode == visual && !VimWaiting && !menu",
    "bindings": {
      "g c": "editor::ToggleComments"
    }
  },
  {
    "context": "Editor && vim_mode == insert",
    "bindings": {
      "ctrl-space": "editor::ShowCompletions"
    }
  },
  {
    "context": "Editor && vim_mode == insert && showing_completions",
    "bindings": {
      "ctrl-a": "editor::ConfirmCompletion"
    }
  },
  {
    "context": "Editor && vim_mode == insert && inline_completion && !showing_completions",
    "bindings": {
      "ctrl-a": "editor::AcceptInlineCompletion",
      "ctrl-n": "editor::AcceptPartialInlineCompletion"
    }
  },
  {
    "context": "Terminal",
    "bindings": {
      "ctrl-w n": "workspace::NewTerminal",
      "ctrl-w z": "workspace::ToggleZoom",
      "ctrl-w h": ["workspace::ActivatePaneInDirection", "Left"],
      "ctrl-w l": ["workspace::ActivatePaneInDirection", "Right"],
      "ctrl-w k": ["workspace::ActivatePaneInDirection", "Up"],
      "ctrl-w j": ["workspace::ActivatePaneInDirection", "Down"],
      "cmd-shift-u": "terminal::ScrollLineUp",
      "cmd-shift-d": "terminal::ScrollLineDown"
    }
  },
  {
    "context": "ProjectPanel && not_editing",
    "bindings": {
      "k": "menu::SelectPrev",
      "j": "menu::SelectNext",
      "h": "project_panel::CollapseSelectedEntry",
      "l": "project_panel::ExpandSelectedEntry",
      "z c": "project_panel::CollapseSelectedEntry",
      "z o": "project_panel::ExpandSelectedEntry",
      "o": "project_panel::Open",
      "shift-o": "project_panel::RevealInFileManager",
      "r": "project_panel::Rename",
      "x": "project_panel::Cut",
      "c": "project_panel::Copy",
      "shift-c": "project_panel::Duplicate",
      "p": "project_panel::Paste",
      "d": "project_panel::Delete",
      "n": "project_panel::NewFile",
      "shift-n": "project_panel::NewDirectory",
      "shift-y": "project_panel::CopyRelativePath",
      "g y": "project_panel::CopyPath",
      "ctrl-w l": "project_panel::ToggleFocus"
    }
  }
]
